%% Stephen Lisius
%% Loops through and calculates impulse generated by laser
function [imp, x, normmass]=ablate(fx, pl, bsd, N, dx, dt, x)

%laser properties
%fx=1e13;     %laser power flux (w/m^2) (J/m^2 s)
%pl=6e-9;     %pulse duration (s)
%bsd=.1;     %beam spot diameter (m)

%simulation parameters
%N=3000;        %number of nodes
%dx=1e-9;         %thickness of each layer (m)
%dt=1e-14;            %time step (s)
dur=pl;              %simulation duration (s)

%Joules per m^2 per time step:
jpdt=fx*dt;
jpldt=jpdt/((pi*(bsd^2))/4);


%material properties
%start with Al
rho=2700;    %material density (kg/m^3)
mp=933.47;     %material melting point (K)
vp=2743;     %material boiling point (K)
hf=10710;     %heat of fusion/melting (J/mol)
hv=284000;     %heat of vaporization (J/mol)
Cmol=24.2;     %material molar heat capacity (J/mol*K)
MM=.02698;   %molar mass, kg/mol
k=237;      %heat conductivity (W/m*K)
isp=500;    %estimated isp of material release

%surface properties
ab=.8;     %surface absorbtivity
eta=.8;   %surface emisivity
Ti=300;     %initial material temperature (K)
SBC=5.670367e-8;    %Stefan-Boltzmann Constant (w/m^2k^4)

%total layer height 
tlh=N*dx;

%beam spot area
bsa=(pi*(bsd^2))/4;
al=(pi*(bsd^2))/4;         %area of column (m^2)

%mass per layer
m=rho*al*dx;

%specific heat capacity of each layer
CL=(Cmol*m)/MM;

%specific heat of fusion and vaporization
hf_S=hf*(m/MM);
hv_S=hv*(m/MM);


%key for node sotrage array:
    %1: Temperature
    %2: Energy till phase change
    %3: Phase, 0 gas 1 liquid 2 solid

%tstore=zeros(round(dur/dt),N);

for it=1:round(dur/dt)
    
    for i=2:N-1

        if x(i-1,3)==0 && x(i,3)~=0
            Qin=al*fx*ab*dt;
            Qout=al*k*((x(i,1)-x(i+1,1))/dx)*dt;
            %disp('if1')
        elseif x(i-1,3)~=0 && x(i,3)~=0
            Qin=al*k*((x(i-1,1)-x(i,1))/dx)*dt;
            Qout=al*k*((x(i,1)-x(i+1,1))/dx)*dt;
            %disp('if2')
        elseif x(i,3)==0
            Qin=0;
            Qout=0;
        end
               
        
        %if it's solid but above its melting point, add to phase change energy and watch for melting then flip
        if x(i,1)>mp && x(i,3)==2

            x(i,2)=x(i,2)+(Qin-Qout);
            deltaT=0;

            %if we've got enough melting energy, flip the state and set counter back to 0
            if x(i,2)>hf_S
                x(i,3)=1;
                x(i,2)=0;
            end

        %if it's liquid but above its vaporization point, add to phase change energy and watch for vaporization
        elseif x(i,1)>vp && x(i,3)==1

            x(i,2)=x(i,2)+(Qin-Qout);
            deltaT=0;

            %if we've got enough vaporization energy, flip the state and set counter back to 0
            if x(i,2)>hv_S
                x(i,3)=0;
                x(i,2)=0;
            end
            
        elseif x(i,3)==0
            deltaT=0;
            
        else
            deltaT=(Qin-Qout)/CL;
        end
        
        x(i,1)=x(i,1)+deltaT;
            
            
    end
    
%     plot(log(x(:,1)))
%     drawnow
    
%     tstore(it,:)=x(:,1);
end

totmass=sum(x(:,3)==0)*m;
normmass=totmass*(bsa/al);
imp=isp*9.81*normmass;

end
